{"version":3,"file":"ModalsRenderer.js","sourceRoot":"","sources":["../../src/modal/ModalsRenderer.tsx"],"names":[],"mappings":";AAAA,YAAY,CAAC;;;AAEb,kDAA2C;AAC3C,iCAAsE;AACtE,+CAA0C;AAC1C,+DAAoE;AAEpE,qCAAiF;AAEjF,mCAA0E;AAEnE,MAAM,cAAc,GAAG,CAAC,EAC7B,QAAQ,EACR,YAAY,EACZ,WAAW,EACX,MAAM,GACc,EAAE,EAAE;IACxB,MAAM,MAAM,GAAG,IAAA,cAAM,EAAC,IAAA,mBAAM,GAAE,CAAC,CAAC;IAChC,sEAAsE;IACtE,6DAA6D;IAC7D,MAAM,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,GAAG,IAAA,gBAAQ,EAAC,CAAC,CAAC,CAAC;IAE5D,OAAO,CACL,CAAC,8BAAqB,CAAC,gBAAgB,CAAC,CAAC,gBAAgB,CAAC,CACxD;MAAA,CAAC,kCAAW,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CACxC;QAAA,CAAC,sCAAe,CACd,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;YACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC;YACxC,IAAI,MAAM,EAAE,CAAC;gBACX,mBAAmB,CAAC,MAAM,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC,CAAC,CACF,QAAQ,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CACzB,aAAa,CAAC,CAAC,CAAC,CAAC,CACjB,KAAK,CAAC,CAAC,yBAAU,CAAC,YAAY,CAAC,CAC/B,YAAY,CAAC,CAAC;YACZ,MAAM,EAAE,IAAI;SACb,CAAC,CACF;UAAA,CAAC,QAAQ,CACX;QAAA,EAAE,sCAAe,CACjB;QAAA,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAC5B,CAAC,WAAW,CACV,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CACrB,MAAM,CAAC,CAAC,MAAM,CAAC,CACf,WAAW,CAAC,CAAC,WAAW,CAAC,CACzB,MAAM,CAAC,CAAC,MAAM,CAAC,EACf,CACH,CAAC,CACJ;MAAA,EAAE,kCAAW,CACf;IAAA,EAAE,8BAAqB,CAAC,CACzB,CAAC;AACJ,CAAC,CAAC;AAxCW,QAAA,cAAc,kBAwCzB;AAQF,SAAS,WAAW,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAoB;IACpE,MAAM,iBAAiB,GAAG,IAAA,gCAAwB,EAAC,MAAM,CAAC,CAAC;IAC3D,MAAM,cAAc,GAAG,IAAA,6BAAqB,EAAC,MAAM,CAAC,CAAC;IAErD,MAAM,sBAAsB,GAC1B,iBAAiB,KAAK,WAAW;QACjC,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,KAAK,KAAK,IAAI,MAAM,CAAC,OAAO,KAAK,eAAe,CAAC,CAAC;IACxE,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,IAAA,gBAAQ,EAAQ,CAAC,CAAC,CAAC;IAC7D,MAAM,YAAY,GAAG,IAAA,cAAM,EAAC,KAAK,CAAC,CAAC;IACnC,MAAM,SAAS,GAAG,IAAA,cAAM,EAAC,KAAK,CAAC,CAAC;IAEhC,MAAM,EAAE,OAAO,EAAE,GAAG,IAAA,WAAG,EAAC,sBAAa,CAAC,CAAC;IACvC,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAE5C,MAAM,cAAc,GAAG,IAAA,mBAAW,EAAC,GAAG,EAAE;QACtC,oEAAoE;QACpE,uCAAuC;QACvC,IACE,YAAY,CAAC,OAAO;YACpB,SAAS,CAAC,OAAO;YACjB,CAAC,CAAC,UAAU,EAAE,sBAAsB,IAAI,UAAU,EAAE,WAAW,EAAE,MAAM,CAAC,EACxE,CAAC;YACD,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC;IACH,CAAC,EAAE,CAAC,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,UAAU,EAAE,sBAAsB,CAAC,CAAC,CAAC;IAE1E,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,cAAc,EAAE,CAAC;IACnB,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC;IAErB,MAAM,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,GAAG,IAAA,gBAAQ,EAAC,CAAC,CAAC,CAAC;IAC5D,MAAM,CAAC,kBAAkB,EAAE,qBAAqB,CAAC,GAAG,IAAA,gBAAQ,EAAqB,SAAS,CAAC,CAAC;IAE5F,MAAM,MAAM,GACV,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM;QACpD,CAAC,CAAC,gBAAgB,GAAG,MAAM,CAAC,OAAO,CAAC,kBAAkB,IAAI,CAAC,CAAC;QAC5D,CAAC,CAAC,gBAAgB,CAAC;IAEvB,OAAO,CACL,CAAC,sCAAe,CACd,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CACrB,IAAI,MAAM,CAAC,SAAS,CAAC,CACrB,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;YACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC;YACxC,IAAI,MAAM,EAAE,CAAC;gBACX,mBAAmB,CAAC,MAAM,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC,CAAC,CACF,QAAQ,CAAC,CAAC,WAAW,MAAM,CAAC,QAAQ,EAAE,CAAC,CACvC,aAAa,CAAC,CAAC,aAAa,CAAC,CAC7B,iBAAiB,CAAC,CAAC,iBAAiB,CAAC,CACrC,cAAc,CAAC,CAAC,cAAc,CAAC,CAC/B,gCAAgC,CAChC,YAAY,CAAC,CAAC;YACZ,MAAM,EAAE,IAAI;SACb,CAAC,CACF,YAAY,CAAC,CAAC;YACZ;gBACE,eAAe,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO;aAC9D;YACD,MAAM,CAAC,SAAS,EAAE,KAAK;SACxB,CAAC,CACF,mBAAmB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CACpC,KAAK,CAAC,CAAC;YACL,yBAAU,CAAC,YAAY;YACvB;gBACE,eAAe,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO;aAC9D;SACF,CAAC,CACF,oBAAoB,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;YAC9B,MAAM,EAAE,WAAW,EAAE,GAAG,KAAK,CAAC;YAC9B,MAAM,EAAE,KAAK,EAAE,GAAG,WAAW,CAAC;YAC9B,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC,CAAC,CACF,WAAW,CAAC,CAAC,GAAG,EAAE;YAChB,WAAW,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACjC,CAAC,CAAC,CACF,QAAQ,CAAC,CAAC,GAAG,EAAE;YACb,MAAM,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC,CAAC,CACF;MAAA,CAAC,wBAAe,CACd,MAAM,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CACxB,KAAK,CAAC,CAAC;YACL,KAAK,EAAE,MAAM;SACd,CAAC,CACF,MAAM,CAAC,CAAC,MAAM,CAAC,CACf,gBAAgB,CAAC,CAAC,sBAAsB,CAAC,CACzC,QAAQ,CAAC,CAAC,GAAG,EAAE;YACb,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;YACzB,cAAc,EAAE,CAAC;QACnB,CAAC,CAAC,CACF,YAAY,CAAC,CAAC,GAAG,EAAE;YACjB,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC;YAC5B,cAAc,EAAE,CAAC;QACnB,CAAC,CAAC,EAEN;IAAA,EAAE,sCAAe,CAAC,CACnB,CAAC;AACJ,CAAC;AAED,MAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,cAAc,EAAE;QACd,IAAI,EAAE,CAAC;KACR;CACF,CAAC,CAAC","sourcesContent":["'use client';\n\nimport { nanoid } from 'nanoid/non-secure';\nimport { use, useCallback, useEffect, useRef, useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ScreenStack, ScreenStackItem } from 'react-native-screens';\n\nimport { ModalPortalHost, PortalContext, PortalContextProvider } from './Portal';\nimport type { ModalConfig, ModalsRendererProps } from './types';\nimport { getStackAnimationType, getStackPresentationType } from './utils';\n\nexport const ModalsRenderer = ({\n  children,\n  modalConfigs,\n  onDismissed,\n  onShow,\n}: ModalsRendererProps) => {\n  const rootId = useRef(nanoid());\n  // This will be used as a baseline for calculating the content offset.\n  // Modal can have at most the same height as the host screen.\n  const [hostScreenHeight, setHostScreenHeight] = useState(0);\n\n  return (\n    <PortalContextProvider hostScreenHeight={hostScreenHeight}>\n      <ScreenStack style={styles.stackContainer}>\n        <ScreenStackItem\n          onLayout={(e) => {\n            const { height } = e.nativeEvent.layout;\n            if (height) {\n              setHostScreenHeight(height);\n            }\n          }}\n          screenId={rootId.current}\n          activityState={2}\n          style={StyleSheet.absoluteFill}\n          headerConfig={{\n            hidden: true,\n          }}>\n          {children}\n        </ScreenStackItem>\n        {modalConfigs.map((config) => (\n          <NativeModal\n            key={config.uniqueId}\n            config={config}\n            onDismissed={onDismissed}\n            onShow={onShow}\n          />\n        ))}\n      </ScreenStack>\n    </PortalContextProvider>\n  );\n};\n\ninterface NativeModalProps {\n  config: ModalConfig;\n  onDismissed?: (id: string) => void;\n  onShow?: (id: string) => void;\n}\n\nfunction NativeModal({ config, onDismissed, onShow }: NativeModalProps) {\n  const stackPresentation = getStackPresentationType(config);\n  const stackAnimation = getStackAnimationType(config);\n\n  const shouldUseContentHeight =\n    stackPresentation === 'formSheet' &&\n    (process.env.EXPO_OS === 'ios' || config.detents === 'fitToContents');\n  const [activityState, setActivityState] = useState<0 | 2>(0);\n  const isRegistered = useRef(false);\n  const hadLayout = useRef(false);\n\n  const { getHost } = use(PortalContext);\n  const hostConfig = getHost(config.uniqueId);\n\n  const maybeShowModal = useCallback(() => {\n    // We only want to show the modal if it is registered and has layout\n    // Otherwise, layout glitches can occur\n    if (\n      isRegistered.current &&\n      hadLayout.current &&\n      (!hostConfig?.shouldUseContentHeight || hostConfig?.contentSize?.height)\n    ) {\n      setActivityState(2);\n    }\n  }, [hostConfig?.contentSize?.height, hostConfig?.shouldUseContentHeight]);\n\n  useEffect(() => {\n    maybeShowModal();\n  }, [maybeShowModal]);\n\n  const [fullScreenHeight, setFullScreenHeight] = useState(0);\n  const [currentDetentIndex, setCurrentDetentIndex] = useState<number | undefined>(undefined);\n\n  const height =\n    Array.isArray(config.detents) && config.detents.length\n      ? fullScreenHeight * config.detents[currentDetentIndex ?? 0]\n      : fullScreenHeight;\n\n  return (\n    <ScreenStackItem\n      key={config.uniqueId}\n      {...config.viewProps}\n      onLayout={(e) => {\n        const { height } = e.nativeEvent.layout;\n        if (height) {\n          setFullScreenHeight(height);\n        }\n      }}\n      screenId={`__modal-${config.uniqueId}`}\n      activityState={activityState}\n      stackPresentation={stackPresentation}\n      stackAnimation={stackAnimation}\n      nativeBackButtonDismissalEnabled\n      headerConfig={{\n        hidden: true,\n      }}\n      contentStyle={[\n        {\n          backgroundColor: config.transparent ? 'transparent' : 'white',\n        },\n        config.viewProps?.style,\n      ]}\n      sheetAllowedDetents={config.detents}\n      style={[\n        StyleSheet.absoluteFill,\n        {\n          backgroundColor: config.transparent ? 'transparent' : 'white',\n        },\n      ]}\n      onSheetDetentChanged={(event) => {\n        const { nativeEvent } = event;\n        const { index } = nativeEvent;\n        setCurrentDetentIndex(index);\n      }}\n      onDismissed={() => {\n        onDismissed?.(config.uniqueId);\n      }}\n      onAppear={() => {\n        onShow?.(config.uniqueId);\n      }}>\n      <ModalPortalHost\n        hostId={config.uniqueId}\n        style={{\n          width: '100%',\n        }}\n        height={height}\n        useContentHeight={shouldUseContentHeight}\n        onLayout={() => {\n          hadLayout.current = true;\n          maybeShowModal();\n        }}\n        onRegistered={() => {\n          isRegistered.current = true;\n          maybeShowModal();\n        }}\n      />\n    </ScreenStackItem>\n  );\n}\n\nconst styles = StyleSheet.create({\n  stackContainer: {\n    flex: 1,\n  },\n});\n"]}