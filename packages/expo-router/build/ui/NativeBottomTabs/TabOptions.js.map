{"version":3,"file":"TabOptions.js","sourceRoot":"","sources":["../../../src/ui/NativeBottomTabs/TabOptions.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { JSXElementConstructor, PropsWithChildren, ReactElement, ReactNode } from 'react';\nimport React, { isValidElement } from 'react';\n\nimport type { NativeTabOptions } from './NativeTabsView';\nimport { AndroidIcon, Badge, Icon, IOSIcon, Title } from './NavigatorElements';\n\nexport type TabProps = PropsWithChildren<{\n  name: string;\n  hidden?: boolean;\n  options?: NativeTabOptions;\n  popToRoot?: boolean;\n  disableScrollToTop?: boolean;\n}>;\n\nexport function Tab(props: TabProps) {\n  return null;\n}\n\nexport function convertTabPropsToOptions({\n  options,\n  hidden,\n  children,\n  popToRoot,\n  disableScrollToTop,\n}: TabProps) {\n  const initialOptions: NativeTabOptions = {\n    ...options,\n    hidden: !!hidden,\n    specialEffects: {\n      repeatedTabSelection: {\n        popToRoot: !!popToRoot,\n        scrollToTop: !disableScrollToTop,\n      },\n    },\n  };\n  const allowedChildren = filterAllowedChildrenElements(children, [\n    Badge,\n    Title,\n    Icon,\n    IOSIcon,\n    AndroidIcon,\n  ]);\n  return allowedChildren.reduce<NativeTabOptions>(\n    (acc, child) => {\n      if (isChildOfType(child, Badge)) {\n        if (child.props.children) {\n          acc.badgeValue = String(child.props.children);\n        }\n        // if (child.props.style?.backgroundColor) {\n        //   acc.tabBarItemBadgeBackgroundColor = child.props.style.backgroundColor;\n        // }\n      } else if (isChildOfType(child, Title)) {\n        acc.title = child.props.children;\n      } else if (isChildOfType(child, Icon)) {\n        const icon: NativeTabOptions['icon'] = {\n          imageSource: child.props.src,\n        };\n        if ('useAsSelected' in child.props && child.props.useAsSelected) {\n          acc.selectedIcon = icon;\n        } else {\n          acc.icon = icon;\n        }\n      } else if (isChildOfType(child, IOSIcon) && process.env.EXPO_OS === 'ios') {\n        const icon: NativeTabOptions['icon'] = {\n          sfSymbolName: child.props.name,\n        };\n        if ('useAsSelected' in child.props && child.props.useAsSelected) {\n          acc.selectedIcon = icon;\n        } else {\n          console.log('Icon', icon);\n          acc.icon = icon;\n        }\n      } else if (isChildOfType(child, AndroidIcon)) {\n        acc.iconResourceName = child.props.name;\n      }\n      return acc;\n    },\n    { ...initialOptions }\n  );\n}\n\nexport function isTab(\n  child: ReactNode,\n  contextKey?: string\n): child is ReactElement<TabProps & { name: string }> {\n  if (isValidElement(child) && child && child.type === Tab) {\n    if (\n      typeof child.props === 'object' &&\n      child.props &&\n      'name' in child.props &&\n      !child.props.name\n    ) {\n      throw new Error(\n        `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`\n      );\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (\n        ['component', 'getComponent'].some(\n          (key) => child.props && typeof child.props === 'object' && key in child.props\n        )\n      ) {\n        throw new Error(\n          `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`component\\` or \\`getComponent\\` prop when used as a child of a Layout Route`\n        );\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction filterAllowedChildrenElements<Components extends JSXElementConstructor<any>[]>(\n  children: ReactNode | ReactNode[],\n  components: Components\n): React.ReactElement<React.ComponentProps<Components[number]>, Components[number]>[] {\n  return React.Children.toArray(children).filter(\n    (\n      child\n    ): child is React.ReactElement<React.ComponentProps<Components[number]>, Components[number]> =>\n      React.isValidElement(child) && components.includes(child.type as (props: any) => ReactNode)\n  );\n}\n\nfunction isChildOfType<T extends JSXElementConstructor<any>>(\n  child: ReactNode,\n  type: T\n): child is React.ReactElement<React.ComponentProps<T>, T> {\n  return React.isValidElement(child) && child.type === type;\n}\n"]}